package cstar.yongfeng.collect;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/***
 * <p>Class <b>UserDivition</b> is a tool class, which provide the function {@link#getUserByKeyWrods(String userProfile, String keywords)},
 * </p> 
 */
public class UserDivition {
	
	/** Root path of the dataset, which can be customized according to actual situation*/
	public static final String DATASET_PATH = "C:/MSR18Dataset/Events-170301-2/Events-170301-2/";
	
	/***
	 * <p>To get user zip file from the <b>userProfile</b>, by using <b>keywords</b>.
	 * keywaords can be user position, c# skill, or other attributes in {@link cc.kave.commons.model.events.userprofiles.UserProfileEvent} in cc.kave.commons-0.0.2.jar.
	 * </p>
	 * <p>The <b>userProfile</b> is generated by function in {@linkplain cstar.yongfeng.preprocess.ExtractEvents#identify()}</p>
	 * @param userProfile profile file path
	 * @param keywords keywords
	 * @return list of userzip paths
	 */
	public static List<String> getUserByKeyWrods(String userProfile, String keywords){
		
		List<String> lsPaths = new ArrayList<String>();
		
		List<String> lsItems = new ArrayList<String>();
		
		try {
			lsItems = readContext(userProfile); // read user item from userProfile
		} catch (Exception e) {
			System.out.println("[ERROR]: can not reading userItem from userProfile.");
			e.printStackTrace();
		} 
		
		for(int i=0; i<lsItems.size(); i++){
			if(lsItems.get(i).contains(keywords)){ // check the keywords
				String expPath = extractPath(lsItems.get(i)); // extract path from user item
				lsPaths.add(expPath);
			}
		}
		
		return lsPaths;
	}
	
	/***
	 * <p>To get user item from userProfile.</p>
	 * @param userProfile
	 * @return user item list
	 * @throws dException 
	 */
	private static List<String> readContext(String userProfile) throws Exception{
		
		File file = new File(userProfile);
		FileReader fr = new FileReader(file);
		@SuppressWarnings("resource")
		BufferedReader br = new BufferedReader(fr);
		
		List<String> lsItems = new ArrayList<String>();
		
		String line = "";
		while((line = br.readLine()) != null){ // we only collect the legal developers
			if(line.startsWith("USER:") && line.contains("Position") && line.contains("C#")){
				lsItems.add(line);
			}
		}
//		System.out.println("[size]:" + lsItems.size());
		
		return lsItems;
	}
	
	
	/***
	 * <p>To extract the user zip path from the user item. The item's format is as follows, 
	 * eg. we want to extract the <b>'2016-06-08/1.zip'</b> from the user item.</p>
	 * <pre>
	 *---------------------------------------------------------------------
	 * USER:2016-05-09/10.zip [Position]:SoftwareEngineer [C#]: Positive2
	 *---------------------------------------------------------------------
	 * </pre>
	 * @param userItem user item
	 * @return user zip path
	 */
	private static String extractPath(String userItem){
		String expPath = "";
		
		String reg = "USER:(.*)\\[Position\\]:(.*)\\[C#\\]:(.*)";
		Pattern pattern = Pattern.compile(reg);
		Matcher matcher = pattern.matcher(userItem);
		if(matcher.find()){
			expPath = matcher.group(1).trim(); // user zip path
//			expPath = matcher.group(2).trim(); // user position
//			expPath = matcher.group(3).trim(); // user CSharp skills
		}
		expPath = expPath.replace("\\", "/");
		return DATASET_PATH + expPath;
	}

}
